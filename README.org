#+title: Nimy Lisp
#+author: Kaushal Modi

Collection of Nim procs and templates which can serve as "phew! I am
glad Nim has this!" for Emacs/Emacs-Lisp/Lisp enthusiasts.

* Documentation
[[https://kaushalmodi.github.io/nimy_lisp/]]
* Testing
#+begin_example
nimble test
#+end_example
* Emacs-Lisp functions implemented
** ~mapconcat~
#+begin_quote
~(mapconcat FUNCTION SEQUENCE SEPARATOR)~

Apply FUNCTION to each element of SEQUENCE, and concat the results as strings.
In between each pair of results, stick in SEPARATOR.  Thus, " " as
SEPARATOR results in spaces between the values returned by FUNCTION.
SEQUENCE may be a list, a vector, a bool-vector, or a string.
#+end_quote
** ~member~
#+begin_quote
~(member ELT LIST)~

For more information check the manuals.

Return non-nil if ELT is an element of LIST.  Comparison done with ‘equal’.
The value is actually the tail of LIST whose car is ELT.
#+end_quote
** ~if-let*~
#+begin_quote
(if-let* VARLIST THEN &rest ELSE)

Bind variables according to VARLIST and eval THEN or ELSE.
Each binding is evaluated in turn, and evaluation stops if a
binding value is nil.  If all are non-nil, the value of THEN is
returned, or the last form in ELSE is returned.

Each element of VARLIST is a list (SYMBOL VALUEFORM) which binds
SYMBOL to the value of VALUEFORM.  An element can additionally
be of the form (VALUEFORM), which is evaluated and checked for
nil; i.e. SYMBOL can be omitted if only the test result is of
interest.
#+end_quote
